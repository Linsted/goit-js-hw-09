{"mappings":"iiBAAA,IAIIA,EACAC,EACAC,EACAC,EACAC,EARJC,EAAAC,EAAA,SAUMC,EAAO,CACXC,WAAYC,SAASC,cAAc,kBACnCC,UAAWF,SAASC,cAAc,iBAClCE,YAAaH,SAASC,cAAc,mBACpCG,OAAQJ,SAASC,cAAc,mBAC/BI,KAAML,SAASC,cAAc,UAI/BH,EAAKO,KAAKC,iBAAiB,UAG3B,SAAkBC,G,kBAYdC,YAAW,WAkBf,IAAuBC,EAAUC,EAKzBC,GALeF,EAhBHG,EAgBaF,EAhBVhB,EAqBfiB,EAAgBE,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GAC9BN,EACFK,EAAQ,CAAEP,WAAUC,UAEtBO,EAAO,CAAER,WAAUC,S,KA1BlBQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACrBU,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IACrEc,OAAI,SAAAL,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAClBU,EAAAxB,GAASyB,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IAEnEhB,GAAYgC,OAAOlC,E,GAChBG,GACHA,GAAiB+B,OAAOlC,E,EArB1Be,EAAEoB,iBACFpC,EAAaO,EAAKC,WAAW6B,MAC7BpC,EAAYM,EAAKI,UAAU0B,MAC3BnC,EAASK,EAAKK,YAAYyB,MAC1BjC,EAAgB+B,OAAOnC,GACvBG,EAAWgC,OAAOnC,GAIlB,IAAK,IAAIsC,EAAI,EAAGA,GAAKpC,EAAQoC,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.5.min.css\";  \n\n\nlet firstDelay;\nlet delayStep;\nlet amount;\nlet ourDelay;\nlet ourDelayTimer;\n\nconst refs = {\n  inputDelay: document.querySelector('[name=\"delay\"]'),\n  inputStep: document.querySelector('[name=\"step\"]'),\n  inputAmount: document.querySelector('[name=\"amount\"]'),\n  button: document.querySelector('[type=\"submit\"]'),\n  form: document.querySelector('.form'),\n}\n\n\nrefs.form.addEventListener('submit', onSubmit)\n\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  firstDelay = refs.inputDelay.value;\n  delayStep = refs.inputStep.value;\n  amount = refs.inputAmount.value;\n  ourDelayTimer = Number(firstDelay);\n  ourDelay = Number(firstDelay);\n\n \n\n  for (let i = 1; i <= amount; i++) {\n    \n    setTimeout(() => {\n      \n      createPromise(i, ourDelay)\n      .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);})\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    ourDelay += Number(delayStep)\n    }, ourDelayTimer)\n    ourDelayTimer += Number(delayStep)\n    \n  }\n\n\n}\n\n\nfunction createPromise(position, delay) {\n\n  \n\n\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n      reject({ position, delay })}\n  })\n\n  return promise;\n  \n  \n}\n\n"],"names":["$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$ourDelay","$ce04d3a99e08e73b$var$ourDelayTimer","$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","button","form","addEventListener","e","setTimeout","position","delay","shouldResolve","i","Math","random","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","Number","preventDefault","value","i1","_loop"],"version":3,"file":"03-promises.d0b233ae.js.map"}